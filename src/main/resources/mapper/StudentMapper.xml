<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.student.mapper.StudentMapper">

    <resultMap id="BaseResultMap" type="com.example.student.entity.Student">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="classId" column="class_id" jdbcType="INTEGER"/>
            <result property="gender" column="gender" jdbcType="VARCHAR"/>
            <result property="birthday" column="birthday" jdbcType="DATE"/>
            <result property="address" column="address" jdbcType="VARCHAR"/>
            <result property="phone" column="phone" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,class_id,
        gender,birthday,address,
        phone,email,create_time,
        update_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from student
        where  id = #{id,jdbcType=INTEGER} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from student
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.student.entity.Student" useGeneratedKeys="true">
        insert into student
        ( id,name,class_id
        ,gender,birthday,address
        ,phone,email,create_time
        ,update_time)
        values (#{id,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},#{classId,jdbcType=INTEGER}
        ,#{gender,jdbcType=VARCHAR},#{birthday,jdbcType=DATE},#{address,jdbcType=VARCHAR}
        ,#{phone,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP}
        ,#{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.student.entity.Student" useGeneratedKeys="true">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="name != null">name,</if>
                <if test="classId != null">class_id,</if>
                <if test="gender != null">gender,</if>
                <if test="birthday != null">birthday,</if>
                <if test="address != null">address,</if>
                <if test="phone != null">phone,</if>
                <if test="email != null">email,</if>
                <if test="createTime != null">create_time,</if>
                <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="name != null">#{name,jdbcType=VARCHAR},</if>
                <if test="classId != null">#{classId,jdbcType=INTEGER},</if>
                <if test="gender != null">#{gender,jdbcType=VARCHAR},</if>
                <if test="birthday != null">#{birthday,jdbcType=DATE},</if>
                <if test="address != null">#{address,jdbcType=VARCHAR},</if>
                <if test="phone != null">#{phone,jdbcType=VARCHAR},</if>
                <if test="email != null">#{email,jdbcType=VARCHAR},</if>
                <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
                <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.student.entity.Student">
        update student
        <set>
                <if test="name != null">
                    name = #{name,jdbcType=VARCHAR},
                </if>
                <if test="classId != null">
                    class_id = #{classId,jdbcType=INTEGER},
                </if>
                <if test="gender != null">
                    gender = #{gender,jdbcType=VARCHAR},
                </if>
                <if test="birthday != null">
                    birthday = #{birthday,jdbcType=DATE},
                </if>
                <if test="address != null">
                    address = #{address,jdbcType=VARCHAR},
                </if>
                <if test="phone != null">
                    phone = #{phone,jdbcType=VARCHAR},
                </if>
                <if test="email != null">
                    email = #{email,jdbcType=VARCHAR},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.student.entity.Student">
        update student
        set 
            name =  #{name,jdbcType=VARCHAR},
            class_id =  #{classId,jdbcType=INTEGER},
            gender =  #{gender,jdbcType=VARCHAR},
            birthday =  #{birthday,jdbcType=DATE},
            address =  #{address,jdbcType=VARCHAR},
            phone =  #{phone,jdbcType=VARCHAR},
            email =  #{email,jdbcType=VARCHAR},
            create_time =  #{createTime,jdbcType=TIMESTAMP},
            update_time =  #{updateTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=INTEGER} 
    </update>
</mapper>
